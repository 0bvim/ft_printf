!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(NAME)	Makefile	/^$(NAME): $(OBJS)$/;"	t
%.o	Makefile	/^%.o:%.c$/;"	t
AR	Makefile	/^AR		=	ar -rcs$/;"	m
BOBJ	Makefile	/^BOBJ		=	$(BSRCS:.c=.o)$/;"	m
BSRCS	Makefile	/^BSRCS		=	$(addprefix bonus\/, $(FILESB))$/;"	m
CFLAGS	Makefile	/^CFLAGS		=	-Wall -Wextra -Werror -g $(INCLUDES)$/;"	m
DEC_BASE	includes/ft_printf.h	/^# define DEC_BASE /;"	d
DEC_BASE	includes/ft_printf_bonus.h	/^# define DEC_BASE /;"	d
FILES	Makefile	/^FILES		=	ft_printf.c ft_put.c ft_print_var.c ft_flags_utils.c$/;"	m
FILESB	Makefile	/^FILESB		=	ft_printf_bonus.c ft_put_bonus.c ft_print_var_bonus.c ft_flags_utils_bonus.c ft_putnbr/;"	m
FT_PRINTF_BONUS_H	includes/ft_printf_bonus.h	/^# define FT_PRINTF_BONUS_H$/;"	d
FT_PRINTF_H	includes/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
HASH	includes/ft_printf_bonus.h	/^# define HASH /;"	d
HEX_LW	includes/ft_printf.h	/^# define HEX_LW /;"	d
HEX_LW	includes/ft_printf_bonus.h	/^# define HEX_LW /;"	d
HEX_L_PREFIX	includes/ft_printf.h	/^# define HEX_L_PREFIX /;"	d
HEX_L_PREFIX	includes/ft_printf_bonus.h	/^# define HEX_L_PREFIX /;"	d
HEX_UP	includes/ft_printf.h	/^# define HEX_UP /;"	d
HEX_UP	includes/ft_printf_bonus.h	/^# define HEX_UP /;"	d
HEX_U_PREFIX	includes/ft_printf.h	/^# define HEX_U_PREFIX /;"	d
HEX_U_PREFIX	includes/ft_printf_bonus.h	/^# define HEX_U_PREFIX /;"	d
INCLUDES	Makefile	/^INCLUDES	=	-I .\/includes$/;"	m
LIBS	Makefile	/^LIBS		=	-lft$/;"	m
LLONG_MAX_	includes/ft_printf_bonus.h	/^# define LLONG_MAX_ /;"	d
LONG_MAX_	includes/ft_printf_bonus.h	/^# define LONG_MAX_ /;"	d
LONG_MIN_	includes/ft_printf_bonus.h	/^# define LONG_MIN_ /;"	d
MINUS	includes/ft_printf_bonus.h	/^# define MINUS /;"	d
NAME	Makefile	/^NAME		=	libftprintf.a$/;"	m
NULL_PTR	includes/ft_printf.h	/^# define NULL_PTR /;"	d
NULL_PTR	includes/ft_printf_bonus.h	/^# define NULL_PTR /;"	d
NULL_STR	includes/ft_printf.h	/^# define NULL_STR /;"	d
NULL_STR	includes/ft_printf_bonus.h	/^# define NULL_STR /;"	d
OBJS	Makefile	/^OBJS		=	$(SRCS:.c=.o)$/;"	m
OCT_BASE	includes/ft_printf.h	/^# define OCT_BASE /;"	d
OCT_BASE	includes/ft_printf_bonus.h	/^# define OCT_BASE /;"	d
OCT_PREFIX	includes/ft_printf.h	/^# define OCT_PREFIX /;"	d
OCT_PREFIX	includes/ft_printf_bonus.h	/^# define OCT_PREFIX /;"	d
PLUS	includes/ft_printf_bonus.h	/^# define PLUS /;"	d
SPACE	includes/ft_printf_bonus.h	/^# define SPACE /;"	d
SRCS	Makefile	/^SRCS		=	$(addprefix sources\/, $(FILES))$/;"	m
ZERO	includes/ft_printf_bonus.h	/^# define ZERO /;"	d
all	Makefile	/^all: $(NAME)$/;"	t
bonus	Makefile	/^bonus: $(BOBJ)$/;"	t
clean	Makefile	/^clean:$/;"	t
cleanbonus	Makefile	/^cleanbonus: $/;"	t
fclean	Makefile	/^fclean: clean$/;"	t
fcleanbonus	Makefile	/^fcleanbonus: cleanbonus fclean$/;"	t
flags	includes/ft_printf.h	/^	unsigned char	flags;$/;"	m	struct:s_elements	typeref:typename:unsigned char
flags	includes/ft_printf_bonus.h	/^	unsigned char				flags;$/;"	m	struct:s_elements	typeref:typename:unsigned char
ft_atoi	bonus/ft_atoi_bonus.c	/^int	ft_atoi(const char *fmt)$/;"	f	typeref:typename:int
ft_get_flags	bonus/ft_put_bonus.c	/^unsigned char	ft_get_flags(char c)$/;"	f	typeref:typename:unsigned char
ft_isflagb	bonus/ft_flags_utils_bonus.c	/^int	ft_isflagb(char f)$/;"	f	typeref:typename:int
ft_istype	sources/ft_flags_utils.c	/^int	ft_istype(char c)$/;"	f	typeref:typename:int
ft_istypeb	bonus/ft_flags_utils_bonus.c	/^int	ft_istypeb(char c)$/;"	f	typeref:typename:int
ft_printf	README.md	/^# ft_printf$/;"	c
ft_printf	bonus/ft_printf_bonus.c	/^int	ft_printf(const char *fmt, ...)$/;"	f	typeref:typename:int
ft_printf	sources/ft_printf.c	/^int	ft_printf(const char *fmt, ...)$/;"	f	typeref:typename:int
ft_put_pointer	bonus/ft_put_bonus.c	/^void	ft_put_pointer(t_large ptr, int *len, char *base, int nbase)$/;"	f	typeref:typename:void
ft_put_pointer	sources/ft_put.c	/^void	ft_put_pointer(size_t ptr, int *len, char *base, int nbase)$/;"	f	typeref:typename:void
ft_putchar	bonus/ft_put_bonus.c	/^int	ft_putchar(char c)$/;"	f	typeref:typename:int
ft_putchar	sources/ft_put.c	/^int	ft_putchar(char c)$/;"	f	typeref:typename:int
ft_putnbr_base	bonus/ft_putnbr_base_bonus.c	/^void	ft_putnbr_base(long nbr, int *len, char *base, int nbase)$/;"	f	typeref:typename:void
ft_putnbr_base	sources/ft_put.c	/^void	ft_putnbr_base(long nbr, int *len, char *base, int nbase)$/;"	f	typeref:typename:void
ft_putstr	bonus/ft_put_bonus.c	/^int	ft_putstr(char *str)$/;"	f	typeref:typename:int
ft_putstr	sources/ft_put.c	/^int	ft_putstr(char *str)$/;"	f	typeref:typename:int
ft_strlen	sources/ft_flags_utils.c	/^size_t	ft_strlen(char *str)$/;"	f	typeref:typename:size_t
ft_strlenb	bonus/ft_flags_utils_bonus.c	/^size_t	ft_strlenb(char *str)$/;"	f	typeref:typename:size_t
ft_strncmp	bonus/ft_flags_utils_bonus.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
get_0x25	bonus/ft_printf_bonus.c	/^static void	get_0x25(const char *fmt, int *len, va_list ap)$/;"	f	typeref:typename:void	file:
get_0x25	sources/ft_printf.c	/^static void	get_0x25(const char *fmt, int *len, va_list ap)$/;"	f	typeref:typename:void	file:
is_digit	sources/ft_flags_utils.c	/^int	is_digit(int c)$/;"	f	typeref:typename:int
is_digitb	bonus/ft_flags_utils_bonus.c	/^int	is_digitb(int c)$/;"	f	typeref:typename:int
main	main.c	/^int	main(void)$/;"	f	typeref:typename:int
precision	includes/ft_printf.h	/^	int				precision;$/;"	m	struct:s_elements	typeref:typename:int
precision	includes/ft_printf_bonus.h	/^	int							precision;$/;"	m	struct:s_elements	typeref:typename:int
print_var	bonus/ft_print_var_bonus.c	/^void	print_var(t_element *info, va_list ap, int *len)$/;"	f	typeref:typename:void
print_var	sources/ft_print_var.c	/^void	print_var(t_element *info, va_list ap, int *len)$/;"	f	typeref:typename:void
re	Makefile	/^re: fclean all$/;"	t
rebonus	Makefile	/^rebonus: fcleanbonus bonus $/;"	t
s_elements	includes/ft_printf.h	/^typedef struct s_elements$/;"	s
s_elements	includes/ft_printf_bonus.h	/^typedef struct s_elements$/;"	s
t_element	includes/ft_printf.h	/^}					t_element;$/;"	t	typeref:struct:s_elements
t_element	includes/ft_printf_bonus.h	/^}								t_element;$/;"	t	typeref:struct:s_elements
t_large	includes/ft_printf_bonus.h	/^typedef unsigned long long int	t_large;$/;"	t	typeref:typename:unsigned long long int
type	includes/ft_printf.h	/^	char			type;$/;"	m	struct:s_elements	typeref:typename:char
type	includes/ft_printf_bonus.h	/^	char						type;$/;"	m	struct:s_elements	typeref:typename:char
verify_flags	bonus/ft_printf_bonus.c	/^static void	verify_flags(int *len, va_list ap, t_element *info, const char *fmt)$/;"	f	typeref:typename:void	file:
verify_flags	sources/ft_printf.c	/^static void	verify_flags(int *len, va_list ap, t_element *info)$/;"	f	typeref:typename:void	file:
width	includes/ft_printf.h	/^	int				width;$/;"	m	struct:s_elements	typeref:typename:int
width	includes/ft_printf_bonus.h	/^	int							width;$/;"	m	struct:s_elements	typeref:typename:int
